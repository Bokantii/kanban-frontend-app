{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/SideBar/Slider/Slider.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport classes from './Slider.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = ({\n  isChecked = false,\n  onChange\n}) => {\n  //   const [checked, setChecked] = useState(isChecked);\n  //   const handleToggle = () => {\n  //     setChecked((prevState) => !prevState);\n  //     if (onChange)onChange(!checked) ;\n  //   };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: classes.switch,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: handleToggle,\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${classes.slider} ${classes.round}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","Slider","isChecked","onChange","className","switch","children","type","handleToggle","checked","fileName","_jsxFileName","lineNumber","columnNumber","slider","round","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/SideBar/Slider/Slider.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport classes from './Slider.module.scss';\nconst Slider = ({ isChecked = false, onChange }) => {\n//   const [checked, setChecked] = useState(isChecked);\n//   const handleToggle = () => {\n//     setChecked((prevState) => !prevState);\n//     if (onChange)onChange(!checked) ;\n//   };\n  return (\n    <label className={classes.switch}>\n      <input type=\"checkbox\" onChange={handleToggle} checked={checked} />\n      <span className={`${classes.slider} ${classes.round}`}></span>\n    </label>\n  );\n};\n\nexport default Slider;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS,GAAG,KAAK;EAAEC;AAAS,CAAC,KAAK;EACpD;EACA;EACA;EACA;EACA;EACE,oBACEH,OAAA;IAAOI,SAAS,EAAEN,OAAO,CAACO,MAAO;IAAAC,QAAA,gBAC/BN,OAAA;MAAOO,IAAI,EAAC,UAAU;MAACJ,QAAQ,EAAEK,YAAa;MAACC,OAAO,EAAEA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEb,OAAA;MAAMI,SAAS,EAAE,GAAGN,OAAO,CAACgB,MAAM,IAAIhB,OAAO,CAACiB,KAAK;IAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEZ,CAAC;AAACG,EAAA,GAZIf,MAAM;AAcZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
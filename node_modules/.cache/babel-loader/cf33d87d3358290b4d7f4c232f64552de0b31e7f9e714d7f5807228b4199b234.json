{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/Column/Column.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./Column.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Column = ({\n  column,\n  addTask\n}) => {\n  _s();\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  function handleAddTask() {\n    if (taskTitle.trim()) {\n      addTask({\n        title: taskTitle,\n        id: Date.now()\n      });\n      setTaskTitle(\"\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.column,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: column.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.tasks,\n      children: column.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.task,\n        children: task.title\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskTitle,\n      onChange: e => setTaskTitle(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Column, \"jGWzcHSPOm7NrHLbMWThKd1Gfjo=\");\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","Column","column","addTask","_s","taskTitle","setTaskTitle","handleAddTask","trim","title","id","Date","now","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","tasks","map","task","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/Column/Column.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Column.module.scss\";\n\nconst Column = ({ column, addTask }) => {\n  const [taskTitle, setTaskTitle] = useState(\"\");\n\n  function handleAddTask() {\n    if (taskTitle.trim()) {\n      addTask({ title: taskTitle, id: Date.now() });\n      setTaskTitle(\"\");\n    }\n  }\n\n  return (\n    <section className={classes.column}>\n      <h3>{column.name}</h3>\n      <section className={classes.tasks}>\n        {column.tasks.map((task) => (\n          <div key={task.id} className={classes.task}>\n            {task.title}\n          </div>\n        ))}\n      </section>\n      <input\n        type=\"text\"\n        value={taskTitle}\n        onChange={(e) => setTaskTitle(e.target.value)}\n        placeholder=\"New Task\"\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n    </section>\n  );\n};\n\nexport default Column;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,SAASU,aAAaA,CAAA,EAAG;IACvB,IAAIF,SAAS,CAACG,IAAI,CAAC,CAAC,EAAE;MACpBL,OAAO,CAAC;QAAEM,KAAK,EAAEJ,SAAS;QAAEK,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC;MAC7CN,YAAY,CAAC,EAAE,CAAC;IAClB;EACF;EAEA,oBACEN,OAAA;IAASa,SAAS,EAAEf,OAAO,CAACI,MAAO;IAAAY,QAAA,gBACjCd,OAAA;MAAAc,QAAA,EAAKZ,MAAM,CAACa;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBnB,OAAA;MAASa,SAAS,EAAEf,OAAO,CAACsB,KAAM;MAAAN,QAAA,EAC/BZ,MAAM,CAACkB,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACrBtB,OAAA;QAAmBa,SAAS,EAAEf,OAAO,CAACwB,IAAK;QAAAR,QAAA,EACxCQ,IAAI,CAACb;MAAK,GADHa,IAAI,CAACZ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACVnB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,SAAU;MACjBoB,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC;IAAU;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFnB,OAAA;MAAQ6B,OAAO,EAAEtB,aAAc;MAAAO,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAACf,EAAA,CA7BIH,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
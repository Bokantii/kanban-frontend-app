{"ast":null,"code":"// import Boards from \"./components/Board/Board\";\nimport BoardsAll from\"./components/BoardsAll/BoardsAll\";import{useState,useRef}from\"react\";import Modal from\"./components/Modal/Modal\";import{ModalContext}from\"./store/modal-context\";import SideBar from\"./components/SideBar/SideBar\";import{useContext}from\"react\";import{TranslateContext}from\"./store/boardTranslate-context\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[enteredBoardName,setEnteredBoardName]=useState(\"\");const[enteredTaskName,setEnteredTaskName]=useState(\"\");const[boardTranslate,setBoardTranslate]=useState(0);const[boards,setBoards]=useState([{id:0,title:\"Initial Board\",columns:[]}]);const[activeBoardIndex,setActiveBoardIndex]=useState(0);const createNewBoard=title=>{const newBoard={id:0,title,columns:[]};setBoards([...boards,newBoard]);setActiveBoardIndex(boards.length);};function selectBoard(index){setActiveBoardIndex(index);}// const [modalIsOpen, setModalIsOpen] = useState(false);\n// const [newBoardCreated, setNewBoardCreated] = useState(false);\n// const [newTaskCreated, setNewTaskCreated] = useState(false);\nconst boardName=useRef();const boardInput=/*#__PURE__*/_jsx(\"input\",{ref:boardName});const addBoard=/*#__PURE__*/_jsx(\"button\",{className:\"addBoard\",onClick:handleClick,children:\"Create New Board\"});const boardTitle=enteredBoardName!==null&&enteredBoardName!==void 0?enteredBoardName:\"\";const modalCtx=useContext(ModalContext);function handleClick(){setEnteredBoardName(boardName.current.value);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(TranslateContext.Provider,{value:{createNewBoard,selectBoard,activeBoardIndex,boards},children:[/*#__PURE__*/_jsx(BoardsAll,{}),/*#__PURE__*/_jsx(SideBar,{})]})});}export default App;","map":{"version":3,"names":["BoardsAll","useState","useRef","Modal","ModalContext","SideBar","useContext","TranslateContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","enteredBoardName","setEnteredBoardName","enteredTaskName","setEnteredTaskName","boardTranslate","setBoardTranslate","boards","setBoards","id","title","columns","activeBoardIndex","setActiveBoardIndex","createNewBoard","newBoard","length","selectBoard","index","boardName","boardInput","ref","addBoard","className","onClick","handleClick","children","boardTitle","modalCtx","current","value","Provider"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js"],"sourcesContent":["// import Boards from \"./components/Board/Board\";\nimport BoardsAll from \"./components/BoardsAll/BoardsAll\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { useContext } from \"react\";\nimport { TranslateContext } from \"./store/boardTranslate-context\";\nfunction App() {\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [boardTranslate, setBoardTranslate] = useState(0);\n  const [boards, setBoards] = useState([\n    { id: 0, title: \"Initial Board\", columns: [] },\n  ]);\n  const [activeBoardIndex, setActiveBoardIndex] = useState(0);\n\n  const createNewBoard = (title) => {\n    const newBoard = { id: 0, title, columns: [] };\n    setBoards([...boards, newBoard]);\n    setActiveBoardIndex(boards.length);\n  };\n  function selectBoard(index) {\n    setActiveBoardIndex(index);\n  }\n\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = <input ref={boardName} />;\n  const addBoard = (\n    <button className=\"addBoard\" onClick={handleClick}>\n      Create New Board\n    </button>\n  );\n\n  const boardTitle = enteredBoardName ?? \"\";\n  const modalCtx = useContext(ModalContext);\n\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n\n  return (\n    <>\n      \n        <TranslateContext.Provider\n          value={{ createNewBoard, selectBoard, activeBoardIndex, boards }}\n        >\n          <BoardsAll />\n          <SideBar />\n        </TranslateContext.Provider>\n     \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,SAAS,KAAM,kCAAkC,CACxD,OAASC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CACxC,MAAO,CAAAC,KAAK,KAAM,0BAA0B,CAC5C,OAASC,YAAY,KAAQ,uBAAuB,CACpD,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,gBAAgB,KAAQ,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAClE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACgB,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACvD,KAAM,CAACoB,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAAC,CACnC,CAAEsB,EAAE,CAAE,CAAC,CAAEC,KAAK,CAAE,eAAe,CAAEC,OAAO,CAAE,EAAG,CAAC,CAC/C,CAAC,CACF,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAE3D,KAAM,CAAA2B,cAAc,CAAIJ,KAAK,EAAK,CAChC,KAAM,CAAAK,QAAQ,CAAG,CAAEN,EAAE,CAAE,CAAC,CAAEC,KAAK,CAAEC,OAAO,CAAE,EAAG,CAAC,CAC9CH,SAAS,CAAC,CAAC,GAAGD,MAAM,CAAEQ,QAAQ,CAAC,CAAC,CAChCF,mBAAmB,CAACN,MAAM,CAACS,MAAM,CAAC,CACpC,CAAC,CACD,QAAS,CAAAC,WAAWA,CAACC,KAAK,CAAE,CAC1BL,mBAAmB,CAACK,KAAK,CAAC,CAC5B,CAEA;AACA;AACA;AACA,KAAM,CAAAC,SAAS,CAAG/B,MAAM,CAAC,CAAC,CAC1B,KAAM,CAAAgC,UAAU,cAAGzB,IAAA,UAAO0B,GAAG,CAAEF,SAAU,CAAE,CAAC,CAC5C,KAAM,CAAAG,QAAQ,cACZ3B,IAAA,WAAQ4B,SAAS,CAAC,UAAU,CAACC,OAAO,CAAEC,WAAY,CAAAC,QAAA,CAAC,kBAEnD,CAAQ,CACT,CAED,KAAM,CAAAC,UAAU,CAAG1B,gBAAgB,SAAhBA,gBAAgB,UAAhBA,gBAAgB,CAAI,EAAE,CACzC,KAAM,CAAA2B,QAAQ,CAAGpC,UAAU,CAACF,YAAY,CAAC,CAEzC,QAAS,CAAAmC,WAAWA,CAAA,CAAG,CACrBvB,mBAAmB,CAACiB,SAAS,CAACU,OAAO,CAACC,KAAK,CAAC,CAC9C,CAEA,mBACEnC,IAAA,CAAAI,SAAA,EAAA2B,QAAA,cAEI7B,KAAA,CAACJ,gBAAgB,CAACsC,QAAQ,EACxBD,KAAK,CAAE,CAAEhB,cAAc,CAAEG,WAAW,CAAEL,gBAAgB,CAAEL,MAAO,CAAE,CAAAmB,QAAA,eAEjE/B,IAAA,CAACT,SAAS,GAAE,CAAC,cACbS,IAAA,CAACJ,OAAO,GAAE,CAAC,EACc,CAAC,CAE9B,CAAC,CAEP,CAEA,cAAe,CAAAS,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
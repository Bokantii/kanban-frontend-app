{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/ViewTask/ViewTask.jsx\";\nimport React from \"react\";\nimport classes from \"./ViewTask.module.scss\";\nimport Modal from \"../Modal/Modal\";\nimport { faEllipsisVertical } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewTask = () => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.view_task,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.subtask_heading,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.subtask,\n          children: [\"Research pricing points of various \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 48\n          }, this), \"competitors and trial different business \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 54\n          }, this), \" models\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEllipsisVertical,\n          className: classes.ellipsisVertical\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.subtask_description,\n        children: \"We know what we're planning to build for version one. Now we need to finalise the first pricing model we'll use. Keep iterating the subtasks until we have a coherent proposition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.subtasks,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.subta,\n          children: \"subtasks (2 of 3)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = ViewTask;\nexport default ViewTask;\nvar _c;\n$RefreshReg$(_c, \"ViewTask\");","map":{"version":3,"names":["React","classes","Modal","faEllipsisVertical","FontAwesomeIcon","jsxDEV","_jsxDEV","ViewTask","children","className","view_task","subtask_heading","subtask","fileName","_jsxFileName","lineNumber","columnNumber","icon","ellipsisVertical","subtask_description","subtasks","subta","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/ViewTask/ViewTask.jsx"],"sourcesContent":["import React from \"react\";\nimport classes from \"./ViewTask.module.scss\";\nimport Modal from \"../Modal/Modal\";\nimport { faEllipsisVertical } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst ViewTask = () => {\n  return (\n    <Modal>\n      <section className={classes.view_task}>\n        <section className={classes.subtask_heading}>\n          <p className={classes.subtask}>\n            Research pricing points of various <br />\n            competitors and trial different business <br /> models\n          </p>\n          <FontAwesomeIcon\n            icon={faEllipsisVertical}\n            className={classes.ellipsisVertical}\n          />\n        </section>\n        <p className={classes.subtask_description}>\n          We know what we're planning to build for version one. Now we need to\n          finalise the first pricing model we'll use. Keep iterating the\n          subtasks until we have a coherent proposition.\n        </p>\n        <section className={classes.subtasks}>\n          <h3 className={classes.subta}>subtasks (2 of 3)</h3>\n        </section>\n      </section>\n    </Modal>\n  );\n};\n\nexport default ViewTask;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA,CAACJ,KAAK;IAAAM,QAAA,eACJF,OAAA;MAASG,SAAS,EAAER,OAAO,CAACS,SAAU;MAAAF,QAAA,gBACpCF,OAAA;QAASG,SAAS,EAAER,OAAO,CAACU,eAAgB;QAAAH,QAAA,gBAC1CF,OAAA;UAAGG,SAAS,EAAER,OAAO,CAACW,OAAQ;UAAAJ,QAAA,GAAC,qCACM,eAAAF,OAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,6CACA,eAAAV,OAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,WACjD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJV,OAAA,CAACF,eAAe;UACda,IAAI,EAAEd,kBAAmB;UACzBM,SAAS,EAAER,OAAO,CAACiB;QAAiB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACVV,OAAA;QAAGG,SAAS,EAAER,OAAO,CAACkB,mBAAoB;QAAAX,QAAA,EAAC;MAI3C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJV,OAAA;QAASG,SAAS,EAAER,OAAO,CAACmB,QAAS;QAAAZ,QAAA,eACnCF,OAAA;UAAIG,SAAS,EAAER,OAAO,CAACoB,KAAM;UAAAb,QAAA,EAAC;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAACM,EAAA,GAzBIf,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/Board/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport classes from \"./Board.module.scss\";\nimport logoDark from \"../../assets/logo-no-background.svg\";\nimport IconVerticalEllipses from \"../Icons/IconVerticalEllipses\";\nimport AddNewTask from \"../AddNewTask/AddNewTask\";\nimport EditTask from \"../EditTask/EditTask\";\nimport EditBoard from \"../EditBoard/EditBoard\";\nimport DeleteTask from \"../DeleteTask/DeleteTask\";\nimport DeleteBoard from \"../DeleteBoard/DeleteBoard\";\nimport ViewTask from \"../ViewTask/ViewTask\";\nimport AddBoardModal from \"../AddBoard/AddBoardModal\";\nimport EmptyBoard from \"../EmptyBoard/EmptyBoard\";\nimport Column from \"../Column/Column\";\nimport { ModalContext } from \"../../store/modal-context\";\nimport { TranslateContext } from \"../../store/boardTranslate-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  // States\n  const [columnsB, setColumns] = useState([]);\n  const [menuIsShown, setMenuIsShown] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editBoardOpen, setEditBoardOpen] = useState(false);\n  const [editTaskOpen, setEditTaskOpen] = useState(false);\n  const [deleteTaskOpen, setDeleteTaskOpen] = useState(false);\n  const [deleteBoardOpen, setDeleteBoardOpen] = useState(false);\n  const [viewTaskOpen, setViewTaskOpen] = useState(false);\n  const [addNewBoard, setAddNewBoard] = useState(false);\n  const [boardName, setBoardName] = useState(null);\n\n  // Context\n  const {\n    translateX,\n    title\n  } = useContext(TranslateContext);\n\n  // Functions\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function editBoard() {\n    setEditBoardOpen(true);\n  }\n  function deleteBoard() {\n    setDeleteBoardOpen(true);\n    setMenuIsShown(false);\n  }\n\n  // Function to add a new column\n  function createNewColumn() {\n    setColumns(prevColumns => [...prevColumns, /*#__PURE__*/_jsxDEV(Column, {}, prevColumns.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]);\n  }\n  function addTaskToColumn(columnId, task) {\n    setColumns(prevColumns => prevColumns.map(column => column.id === columnId ? {\n      ...column,\n      tasks: [...column.tasks, task]\n    } : column));\n  }\n  function showBoardMenu() {\n    setMenuIsShown(!menuIsShown);\n  }\n  const boardContent = columnsB.length ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.columns,\n    children: [columnsB.map(column => /*#__PURE__*/_jsxDEV(Column, {\n      column: column,\n      addTask: task => addTaskToColumn(column.id, task)\n    }, column.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.create_new_column,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: createNewColumn,\n        children: \"+New Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(EmptyBoard, {\n    createNewColumn: createNewColumn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: \"none\",\n    children: [modalIsOpen && /*#__PURE__*/_jsxDEV(AddNewTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }, this), editBoardOpen && /*#__PURE__*/_jsxDEV(EditBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }, this), deleteBoardOpen && /*#__PURE__*/_jsxDEV(DeleteBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }, this), editTaskOpen && /*#__PURE__*/_jsxDEV(EditTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 24\n    }, this), deleteTaskOpen && /*#__PURE__*/_jsxDEV(DeleteTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 26\n    }, this), viewTaskOpen && /*#__PURE__*/_jsxDEV(ViewTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 24\n    }, this), addNewBoard && /*#__PURE__*/_jsxDEV(AddBoardModal, {\n      createTheBoard: () => setBoardName(title),\n      boardTitle: boardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: `${classes.board_}`,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: `${classes.header_}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logo,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoDark,\n            alt: \"logo_light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.header_text,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.platform_launch_text,\n            children: boardName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header_text_right,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.add_new_tasks,\n              onClick: openModal,\n              children: \"+add new task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconVerticalEllipses, {\n              showBoardMenu: showBoardMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: classes.newBoard_menu,\n              style: {\n                display: menuIsShown ? \"block\" : \"none\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.newBoard_menu_content,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.edit_board,\n                  onClick: editBoard,\n                  children: \"Edit Board\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.delete_board,\n                  onClick: deleteBoard,\n                  children: \"Delete Board\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.kanban_app_body,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: classes.kanban_body_content,\n          style: {\n            transform: `translateX(${translateX})`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: classes.columns,\n            children: [columnsB.map(column => /*#__PURE__*/_jsxDEV(Column, {\n              column: column,\n              addTask: task => addTaskToColumn(column.id, task)\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.create_new_column,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: createNewColumn,\n                children: \"+New Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"WfLP1JkAyNgsoWVuKdwYAK7tHVI=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useContext","useRef","classes","logoDark","IconVerticalEllipses","AddNewTask","EditTask","EditBoard","DeleteTask","DeleteBoard","ViewTask","AddBoardModal","EmptyBoard","Column","ModalContext","TranslateContext","jsxDEV","_jsxDEV","Board","_s","columnsB","setColumns","menuIsShown","setMenuIsShown","modalIsOpen","setModalIsOpen","editBoardOpen","setEditBoardOpen","editTaskOpen","setEditTaskOpen","deleteTaskOpen","setDeleteTaskOpen","deleteBoardOpen","setDeleteBoardOpen","viewTaskOpen","setViewTaskOpen","addNewBoard","setAddNewBoard","boardName","setBoardName","translateX","title","openModal","editBoard","deleteBoard","createNewColumn","prevColumns","length","fileName","_jsxFileName","lineNumber","columnNumber","addTaskToColumn","columnId","task","map","column","id","tasks","showBoardMenu","boardContent","className","columns","children","addTask","create_new_column","onClick","Provider","value","createTheBoard","boardTitle","board_","header_","logo","src","alt","header_text","platform_launch_text","header_text_right","add_new_tasks","newBoard_menu","style","display","newBoard_menu_content","edit_board","delete_board","kanban_app_body","kanban_body_content","transform","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/Board/Board.jsx"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport classes from \"./Board.module.scss\";\nimport logoDark from \"../../assets/logo-no-background.svg\";\nimport IconVerticalEllipses from \"../Icons/IconVerticalEllipses\";\nimport AddNewTask from \"../AddNewTask/AddNewTask\";\nimport EditTask from \"../EditTask/EditTask\";\nimport EditBoard from \"../EditBoard/EditBoard\";\nimport DeleteTask from \"../DeleteTask/DeleteTask\";\nimport DeleteBoard from \"../DeleteBoard/DeleteBoard\";\nimport ViewTask from \"../ViewTask/ViewTask\";\nimport AddBoardModal from \"../AddBoard/AddBoardModal\";\nimport EmptyBoard from \"../EmptyBoard/EmptyBoard\";\nimport Column from \"../Column/Column\";\nimport { ModalContext } from \"../../store/modal-context\";\nimport { TranslateContext } from \"../../store/boardTranslate-context\";\n\nconst Board = () => {\n  // States\n  const [columnsB, setColumns] = useState([]);\n  const [menuIsShown, setMenuIsShown] = useState(false);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editBoardOpen, setEditBoardOpen] = useState(false);\n  const [editTaskOpen, setEditTaskOpen] = useState(false);\n  const [deleteTaskOpen, setDeleteTaskOpen] = useState(false);\n  const [deleteBoardOpen, setDeleteBoardOpen] = useState(false);\n  const [viewTaskOpen, setViewTaskOpen] = useState(false);\n  const [addNewBoard, setAddNewBoard] = useState(false);\n  const [boardName, setBoardName] = useState(null);\n\n  // Context\n  const { translateX, title } = useContext(TranslateContext);\n\n  // Functions\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function editBoard() {\n    setEditBoardOpen(true);\n  }\n\n  function deleteBoard() {\n    setDeleteBoardOpen(true);\n    setMenuIsShown(false);\n  }\n\n  // Function to add a new column\n  function createNewColumn() {\n    setColumns((prevColumns) => [\n      ...prevColumns,\n      <Column key={prevColumns.length} />,\n    ]);\n  }\n\n\n  function addTaskToColumn(columnId, task) {\n    setColumns((prevColumns) =>\n      prevColumns.map((column) =>\n        column.id === columnId\n          ? { ...column, tasks: [...column.tasks, task] }\n          : column\n      )\n    );\n  }\n\n  function showBoardMenu() {\n    setMenuIsShown(!menuIsShown);\n  }\n\n  const boardContent = columnsB.length ? (\n    <section className={classes.columns}>\n      {columnsB.map((column) => (\n        <Column\n          key={column.id}\n          column={column}\n          addTask={(task) => addTaskToColumn(column.id, task)}\n        />\n      ))}\n      <div className={classes.create_new_column}>\n        <span onClick={createNewColumn}>+New Column</span>\n      </div>\n    </section>\n  ) : (\n    <EmptyBoard createNewColumn={createNewColumn} />\n  );\n\n  return (\n    <ModalContext.Provider value=\"none\">\n      {modalIsOpen && <AddNewTask />}\n      {editBoardOpen && <EditBoard />}\n      {deleteBoardOpen && <DeleteBoard />}\n      {editTaskOpen && <EditTask />}\n      {deleteTaskOpen && <DeleteTask />}\n      {viewTaskOpen && <ViewTask />}\n      {addNewBoard && (\n        <AddBoardModal\n          createTheBoard={() => setBoardName(title)}\n          boardTitle={boardName}\n        />\n      )}\n      <section className={`${classes.board_}`}>\n        <section className={`${classes.header_}`}>\n          <div className={classes.logo}>\n            <img src={logoDark} alt=\"logo_light\" />\n          </div>\n          <div className={classes.header_text}>\n            <span className={classes.platform_launch_text}>{boardName}</span>\n            <div className={classes.header_text_right}>\n              <button className={classes.add_new_tasks} onClick={openModal}>\n                +add new task\n              </button>\n              <IconVerticalEllipses showBoardMenu={showBoardMenu} />\n              <section\n                className={classes.newBoard_menu}\n                style={{ display: menuIsShown ? \"block\" : \"none\" }}\n              >\n                <div className={classes.newBoard_menu_content}>\n                  <span className={classes.edit_board} onClick={editBoard}>\n                    Edit Board\n                  </span>\n                  <span className={classes.delete_board} onClick={deleteBoard}>\n                    Delete Board\n                  </span>\n                </div>\n              </section>\n            </div>\n          </div>\n        </section>\n        <section className={classes.kanban_app_body}>\n          <section\n            className={classes.kanban_body_content}\n            style={{ transform: `translateX(${translateX})` }}\n          >\n            <section className={classes.columns}>\n              {columnsB.map((column) => (\n                <Column\n                  key={column.id}\n                  column={column}\n                  addTask={(task) => addTaskToColumn(column.id, task)}\n                />\n              ))}\n              <div className={classes.create_new_column}>\n                <span onClick={createNewColumn}>+New Column</span>\n              </div>\n            </section>\n          </section>\n        </section>\n      </section>\n    </ModalContext.Provider>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
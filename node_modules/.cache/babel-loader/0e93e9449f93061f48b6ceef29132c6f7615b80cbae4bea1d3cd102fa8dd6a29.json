{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/EmptyBoard/EmptyBoard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport classes from \"./EmptyBoard.module.scss\";\nimport { TaskProvider } from \"../../store/newTaskContext\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmptyBoard = ({\n  createNewColumn\n}) => {\n  _s();\n  const [isResponsive, setIsResponsive] = useState(false);\n  const responsiveSpan = isResponsive ? /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"The board is empty. Create a new column \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 47\n    }, this), \" to get started\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"The board is empty. Create a new column to get started\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    const handle = () => {\n      setIsResponsive(true);\n    };\n    window.addEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TaskProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.new_column,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"The board is empty. Create a new column to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.add_new_column,\n        onClick: createNewColumn,\n        children: \"+ add new column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(EmptyBoard, \"yQsLieSh2qQeHZIGlti9gPnIB7M=\");\n_c = EmptyBoard;\nexport default EmptyBoard;\nvar _c;\n$RefreshReg$(_c, \"EmptyBoard\");","map":{"version":3,"names":["React","classes","TaskProvider","useState","useEffect","jsxDEV","_jsxDEV","EmptyBoard","createNewColumn","_s","isResponsive","setIsResponsive","responsiveSpan","children","fileName","_jsxFileName","lineNumber","columnNumber","handle","window","addEventListener","handleResize","className","new_column","add_new_column","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/EmptyBoard/EmptyBoard.jsx"],"sourcesContent":["import React from \"react\";\nimport classes from \"./EmptyBoard.module.scss\";\nimport { TaskProvider } from \"../../store/newTaskContext\";\nimport { useState,useEffect } from \"react\";\nconst EmptyBoard = ({ createNewColumn }) => {\n  const [isResponsive, setIsResponsive] = useState(false);\n  const responsiveSpan = isResponsive ? (\n    <span>\n      The board is empty. Create a new column <br /> to get started\n    </span>\n  ) : (\n    <span>The board is empty. Create a new column to get started</span>\n  );\n  useEffect(()=>{\n    const handle=()=>{\n      setIsResponsive(true)\n    }\n    window.addEventListener('resize',handleResize)\n  },[])\n  return (\n    <TaskProvider>\n      <section className={classes.new_column}>\n        <span>The board is empty. Create a new column to get started</span>\n        <button className={classes.add_new_column} onClick={createNewColumn}>\n          + add new column\n        </button>\n      </section>\n    </TaskProvider>\n  );\n};\n\nexport default EmptyBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMS,cAAc,GAAGF,YAAY,gBACjCJ,OAAA;IAAAO,QAAA,GAAM,0CACoC,eAAAP,OAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,mBAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,gBAEPX,OAAA;IAAAO,QAAA,EAAM;EAAsD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CACnE;EACDb,SAAS,CAAC,MAAI;IACZ,MAAMc,MAAM,GAACA,CAAA,KAAI;MACfP,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC;IACDQ,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAACC,YAAY,CAAC;EAChD,CAAC,EAAC,EAAE,CAAC;EACL,oBACEf,OAAA,CAACJ,YAAY;IAAAW,QAAA,eACXP,OAAA;MAASgB,SAAS,EAAErB,OAAO,CAACsB,UAAW;MAAAV,QAAA,gBACrCP,OAAA;QAAAO,QAAA,EAAM;MAAsD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnEX,OAAA;QAAQgB,SAAS,EAAErB,OAAO,CAACuB,cAAe;QAACC,OAAO,EAAEjB,eAAgB;QAAAK,QAAA,EAAC;MAErE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEnB,CAAC;AAACR,EAAA,CAzBIF,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
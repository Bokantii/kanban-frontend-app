{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/AddNewTask/AddNewTask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport classes from \"./AddNewTask.module.scss\";\nimport Modal from \"../Modal/Modal\";\nimport { TaskContext } from \"../../store/newTaskContext\";\nimport { TaskProvider } from \"../../store/newTaskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewTask = ({\n  closeModal\n}) => {\n  _s();\n  var _columns$;\n  const {\n    addNewTask,\n    columns\n  } = useContext(TaskContext);\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [selectedColumnId, setSelectedColumnId] = useState(((_columns$ = columns[0]) === null || _columns$ === void 0 ? void 0 : _columns$.id) || \"\");\n  const handleAddTask = () => {\n    if (taskTitle && selectedColumnId) {\n      addNewTask(selectedColumnId, taskTitle);\n      setTaskTitle(\"\");\n      closeModal(); // Close modal after adding task\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.add_new_task,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value),\n        placeholder: \"Task title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedColumnId,\n        onChange: e => setSelectedColumnId(Number(e.target.value)),\n        children: columns.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: column.id,\n          children: column.name\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskProvider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewTask, \"STGMRJBr4tKlY9oV20jWCzDHbzs=\");\n_c = AddNewTask;\nexport default AddNewTask;\nvar _c;\n$RefreshReg$(_c, \"AddNewTask\");","map":{"version":3,"names":["React","useContext","useState","classes","Modal","TaskContext","TaskProvider","jsxDEV","_jsxDEV","AddNewTask","closeModal","_s","_columns$","addNewTask","columns","taskTitle","setTaskTitle","selectedColumnId","setSelectedColumnId","id","handleAddTask","children","className","add_new_task","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","Number","map","column","name","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/AddNewTask/AddNewTask.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport classes from \"./AddNewTask.module.scss\";\nimport Modal from \"../Modal/Modal\";\nimport { TaskContext } from \"../../store/newTaskContext\";\nimport { TaskProvider } from \"../../store/newTaskContext\";\nconst AddNewTask = ({ closeModal }) => {\n  const { addNewTask, columns } = useContext(TaskContext);\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [selectedColumnId, setSelectedColumnId] = useState(columns[0]?.id || \"\");\n\n  const handleAddTask = () => {\n    if (taskTitle && selectedColumnId) {\n      addNewTask(selectedColumnId, taskTitle);\n      setTaskTitle(\"\");\n      closeModal(); // Close modal after adding task\n    }\n  };\n\n  return (\n    <Modal>\n      <section className={classes.add_new_task}>\n        <h3>New Task</h3>\n        <input\n          type=\"text\"\n          value={taskTitle}\n          onChange={(e) => setTaskTitle(e.target.value)}\n          placeholder=\"Task title\"\n        />\n        <select\n          value={selectedColumnId}\n          onChange={(e) => setSelectedColumnId(Number(e.target.value))}\n        >\n          {columns.map((column) => (\n            <option key={column.id} value={column.id}>\n              {column.name}\n            </option>\n          ))}\n        </select>\n       <TaskProvider></TaskProvider>\n        <button onClick={handleAddTask}>Add Task</button>\n      </section>\n    </Modal>\n  );\n};\n\nexport default AddNewTask;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,YAAY,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1D,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,SAAA;EACrC,MAAM;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGb,UAAU,CAACI,WAAW,CAAC;EACvD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAAU,SAAA,GAAAE,OAAO,CAAC,CAAC,CAAC,cAAAF,SAAA,uBAAVA,SAAA,CAAYO,EAAE,KAAI,EAAE,CAAC;EAE9E,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIL,SAAS,IAAIE,gBAAgB,EAAE;MACjCJ,UAAU,CAACI,gBAAgB,EAAEF,SAAS,CAAC;MACvCC,YAAY,CAAC,EAAE,CAAC;MAChBN,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,oBACEF,OAAA,CAACJ,KAAK;IAAAiB,QAAA,eACJb,OAAA;MAASc,SAAS,EAAEnB,OAAO,CAACoB,YAAa;MAAAF,QAAA,gBACvCb,OAAA;QAAAa,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEd,SAAU;QACjBe,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFnB,OAAA;QACEqB,KAAK,EAAEZ,gBAAiB;QACxBa,QAAQ,EAAGC,CAAC,IAAKb,mBAAmB,CAACgB,MAAM,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;QAAAR,QAAA,EAE5DP,OAAO,CAACqB,GAAG,CAAEC,MAAM,iBAClB5B,OAAA;UAAwBqB,KAAK,EAAEO,MAAM,CAACjB,EAAG;UAAAE,QAAA,EACtCe,MAAM,CAACC;QAAI,GADDD,MAAM,CAACjB,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACVnB,OAAA,CAACF,YAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eAC5BnB,OAAA;QAAQ8B,OAAO,EAAElB,aAAc;QAAAC,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAAChB,EAAA,CAtCIF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
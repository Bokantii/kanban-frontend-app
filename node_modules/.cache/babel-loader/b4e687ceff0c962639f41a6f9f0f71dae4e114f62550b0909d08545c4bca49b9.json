{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import Boards from \"./components/Board/Board\";\nimport BoardsAll from \"./components/BoardsAll/BoardsAll\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport AddNewTask from \"./components/AddNewTask/AddNewTask\";\nimport { ModalContext } from \"./store/modal-context\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { useContext } from \"react\";\nimport { TranslateProvider } from \"./store/boardTranslate-context\";\nimport EditTask from \"./components/EditTask/EditTask\";\nimport EditBoard from \"./components/EditBoard/EditBoard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [boardTranslate, setBoardTranslate] = useState(0);\n  const [boards, setBoards] = useState([{\n    id: 0,\n    title: \"Initial Board\",\n    columns: []\n  }]);\n  const [activeBoardIndex, setActiveBoardIndex] = useState(0);\n  const createNewBoard = title => {\n    const newBoard = {\n      id: 0,\n      title,\n      columns: []\n    };\n    setBoards([...boards, newBoard]);\n    setActiveBoardIndex(boards.length);\n  };\n  function selectBoard(index) {\n    setActiveBoardIndex(index);\n  }\n\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: boardName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 22\n  }, this);\n  const addBoard = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"addBoard\",\n    onClick: handleClick,\n    children: \"Create New Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  const boardTitle = enteredBoardName !== null && enteredBoardName !== void 0 ? enteredBoardName : \"\";\n  const modalCtx = useContext(ModalContext);\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // <>\n  //   <AddNewTask/>\n  // </>\n  ;\n}\n_s(App, \"Rcb94vCSprhEOZHBBL/+xKtH2/I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BoardsAll","useState","useRef","Modal","AddNewTask","ModalContext","SideBar","useContext","TranslateProvider","EditTask","EditBoard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","enteredBoardName","setEnteredBoardName","enteredTaskName","setEnteredTaskName","boardTranslate","setBoardTranslate","boards","setBoards","id","title","columns","activeBoardIndex","setActiveBoardIndex","createNewBoard","newBoard","length","selectBoard","index","boardName","boardInput","ref","fileName","_jsxFileName","lineNumber","columnNumber","addBoard","className","onClick","handleClick","children","boardTitle","modalCtx","current","value","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/App.js"],"sourcesContent":["// import Boards from \"./components/Board/Board\";\nimport BoardsAll from \"./components/BoardsAll/BoardsAll\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport AddNewTask from \"./components/AddNewTask/AddNewTask\";\nimport { ModalContext } from \"./store/modal-context\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { useContext } from \"react\";\nimport { TranslateProvider } from \"./store/boardTranslate-context\";\nimport EditTask from \"./components/EditTask/EditTask\";\nimport EditBoard from \"./components/EditBoard/EditBoard\";\nfunction App() {\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [boardTranslate, setBoardTranslate] = useState(0);\n  const [boards, setBoards] = useState([\n    { id: 0, title: \"Initial Board\", columns: [] },\n  ]);\n  const [activeBoardIndex, setActiveBoardIndex] = useState(0);\n\n  const createNewBoard = (title) => {\n    const newBoard = { id: 0, title, columns: [] };\n    setBoards([...boards, newBoard]);\n    setActiveBoardIndex(boards.length);\n  };\n  function selectBoard(index) {\n    setActiveBoardIndex(index);\n  }\n\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = <input ref={boardName} />;\n  const addBoard = (\n    <button className=\"addBoard\" onClick={handleClick}>\n      Create New Board\n    </button>\n  );\n\n  const boardTitle = enteredBoardName ?? \"\";\n  const modalCtx = useContext(ModalContext);\n\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n\n  return (\n    <>\n     \n      {/* <TranslateProvider>\n        <BoardsAll />\n        <SideBar />\n      </TranslateProvider> */}\n    </>\n    // <>\n    //   <AddNewTask/>\n    // </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,SAAS,MAAM,kCAAkC;AACxD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,SAAS,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,CACnC;IAAEwB,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,eAAe;IAAEC,OAAO,EAAE;EAAG,CAAC,CAC/C,CAAC;EACF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAM6B,cAAc,GAAIJ,KAAK,IAAK;IAChC,MAAMK,QAAQ,GAAG;MAAEN,EAAE,EAAE,CAAC;MAAEC,KAAK;MAAEC,OAAO,EAAE;IAAG,CAAC;IAC9CH,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEQ,QAAQ,CAAC,CAAC;IAChCF,mBAAmB,CAACN,MAAM,CAACS,MAAM,CAAC;EACpC,CAAC;EACD,SAASC,WAAWA,CAACC,KAAK,EAAE;IAC1BL,mBAAmB,CAACK,KAAK,CAAC;EAC5B;;EAEA;EACA;EACA;EACA,MAAMC,SAAS,GAAGjC,MAAM,CAAC,CAAC;EAC1B,MAAMkC,UAAU,gBAAGxB,OAAA;IAAOyB,GAAG,EAAEF;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC5C,MAAMC,QAAQ,gBACZ9B,OAAA;IAAQ+B,SAAS,EAAC,UAAU;IAACC,OAAO,EAAEC,WAAY;IAAAC,QAAA,EAAC;EAEnD;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EAED,MAAMM,UAAU,GAAG9B,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,EAAE;EACzC,MAAM+B,QAAQ,GAAGzC,UAAU,CAACF,YAAY,CAAC;EAEzC,SAASwC,WAAWA,CAAA,EAAG;IACrB3B,mBAAmB,CAACiB,SAAS,CAACc,OAAO,CAACC,KAAK,CAAC;EAC9C;EAEA,oBACEtC,OAAA,CAAAE,SAAA,mBAME;EACF;EACA;EACA;EAAA;AAEJ;AAACE,EAAA,CAhDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
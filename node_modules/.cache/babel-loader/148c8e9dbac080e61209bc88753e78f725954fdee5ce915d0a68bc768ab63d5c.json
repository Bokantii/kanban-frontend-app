{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/Board/Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport classes from \"./Board.module.scss\";\nimport logoDark from \"../../assets/logo-no-background.svg\";\nimport IconVerticalEllipses from \"../Icons/IconVerticalEllipses\";\nimport AddNewTask from \"../AddNewTask/AddNewTask\";\nimport EditBoard from \"../EditBoard/EditBoard\";\nimport Column from \"../Column/Column\";\nimport { ModalContext } from \"../../store/modal-context\";\nimport { TranslateContext } from \"../../store/boardTranslate-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  var _boards$activeBoardIn;\n  // Contexts\n  const {\n    translateX,\n    boards,\n    activeBoardIndex,\n    createNewBoard\n  } = useContext(TranslateContext);\n\n  // Local State\n  const [columns, setColumns] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // Functions\n  const openModal = () => setModalIsOpen(true);\n  const addNewColumn = () => {\n    const newColumn = {\n      id: Date.now(),\n      name: `Column ${columns.length + 1}`,\n      tasks: []\n    };\n    setColumns(prevColumns => [...prevColumns, newColumn]);\n  };\n\n  // Function to add a task to a specific column by columnId\n  const addTaskToColumn = (columnId, task) => {\n    setColumns(prevColumns => prevColumns.map(column => column.id === columnId ? {\n      ...column,\n      tasks: [...column.tasks, task]\n    } : column));\n  };\n  const boardContent = columns.length ? /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.columns,\n    children: [columns.map(column => /*#__PURE__*/_jsxDEV(Column, {\n      column: column,\n      addTask: task => addTaskToColumn(column.id, task)\n    }, column.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.create_new_column,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: addNewColumn,\n        children: \"+ New Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No columns yet. Click below to add one!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: \"none\",\n    children: [modalIsOpen && /*#__PURE__*/_jsxDEV(AddNewTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.board_,\n      style: {\n        transform: `translateX(${translateX})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: classes.header_,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logo,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoDark,\n            alt: \"logo_light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.header_text,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_boards$activeBoardIn = boards[activeBoardIndex]) === null || _boards$activeBoardIn === void 0 ? void 0 : _boards$activeBoardIn.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.header_text_right,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.add_new_tasks,\n              onClick: openModal,\n              children: \"+ Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconVerticalEllipses, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.kanban_app_body,\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: classes.kanban_body_content,\n          children: boardContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"V4+0Gguqpptm7eSkb0mnF0jW3+E=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useContext","useRef","classes","logoDark","IconVerticalEllipses","AddNewTask","EditBoard","Column","ModalContext","TranslateContext","jsxDEV","_jsxDEV","Board","_s","_boards$activeBoardIn","translateX","boards","activeBoardIndex","createNewBoard","columns","setColumns","modalIsOpen","setModalIsOpen","openModal","addNewColumn","newColumn","id","Date","now","name","length","tasks","prevColumns","addTaskToColumn","columnId","task","map","column","boardContent","className","children","addTask","fileName","_jsxFileName","lineNumber","columnNumber","create_new_column","onClick","Provider","value","board_","style","transform","header_","logo","src","alt","header_text","title","header_text_right","add_new_tasks","kanban_app_body","kanban_body_content","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/Board/Board.jsx"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport classes from \"./Board.module.scss\";\nimport logoDark from \"../../assets/logo-no-background.svg\";\nimport IconVerticalEllipses from \"../Icons/IconVerticalEllipses\";\nimport AddNewTask from \"../AddNewTask/AddNewTask\";\nimport EditBoard from \"../EditBoard/EditBoard\";\nimport Column from \"../Column/Column\";\nimport { ModalContext } from \"../../store/modal-context\";\nimport { TranslateContext } from \"../../store/boardTranslate-context\";\n\nconst Board = () => {\n  // Contexts\n  const { translateX, boards, activeBoardIndex, createNewBoard } = useContext(TranslateContext);\n\n  // Local State\n  const [columns, setColumns] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // Functions\n  const openModal = () => setModalIsOpen(true);\n\n  const addNewColumn = () => {\n    const newColumn = {\n      id: Date.now(),\n      name: `Column ${columns.length + 1}`,\n      tasks: [],\n    };\n    setColumns((prevColumns) => [...prevColumns, newColumn]);\n  };\n\n  // Function to add a task to a specific column by columnId\n  const addTaskToColumn = (columnId, task) => {\n    setColumns((prevColumns) =>\n      prevColumns.map((column) =>\n        column.id === columnId\n          ? { ...column, tasks: [...column.tasks, task] }\n          : column\n      )\n    );\n  };\n\n  const boardContent = columns.length ? (\n    <section className={classes.columns}>\n      {columns.map((column) => (\n        <Column\n          key={column.id}\n          column={column}\n          addTask={(task) => addTaskToColumn(column.id, task)}\n        />\n      ))}\n      <div className={classes.create_new_column}>\n        <span onClick={addNewColumn}>+ New Column</span>\n      </div>\n    </section>\n  ) : (\n    <p>No columns yet. Click below to add one!</p>\n  );\n\n  return (\n    <ModalContext.Provider value=\"none\">\n      {modalIsOpen && <AddNewTask />}\n      <section className={classes.board_} style={{ transform: `translateX(${translateX})` }}>\n        {/* Header Start */}\n        <header className={classes.header_}>\n          <div className={classes.logo}>\n            <img src={logoDark} alt=\"logo_light\" />\n          </div>\n          <div className={classes.header_text}>\n            <span>{boards[activeBoardIndex]?.title}</span>\n            <div className={classes.header_text_right}>\n              <button className={classes.add_new_tasks} onClick={openModal}>\n                + Add New Task\n              </button>\n              <IconVerticalEllipses />\n            </div>\n          </div>\n        </header>\n        {/* Header End */}\n\n        {/* Body Start */}\n        <section className={classes.kanban_app_body}>\n          <section className={classes.kanban_body_content}>\n            {boardContent}\n          </section>\n        </section>\n        {/* Body End */}\n      </section>\n    </ModalContext.Provider>\n  );\n};\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAC3D,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,qCAAqC;AAC1D,OAAOC,oBAAoB,MAAM,+BAA+B;AAChE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,gBAAgB,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAClB;EACA,MAAM;IAAEC,UAAU;IAAEC,MAAM;IAAEC,gBAAgB;IAAEC;EAAe,CAAC,GAAGlB,UAAU,CAACS,gBAAgB,CAAC;;EAE7F;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMwB,SAAS,GAAGA,CAAA,KAAMD,cAAc,CAAC,IAAI,CAAC;EAE5C,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG;MAChBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,UAAUV,OAAO,CAACW,MAAM,GAAG,CAAC,EAAE;MACpCC,KAAK,EAAE;IACT,CAAC;IACDX,UAAU,CAAEY,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAEP,SAAS,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;IAC1Cf,UAAU,CAAEY,WAAW,IACrBA,WAAW,CAACI,GAAG,CAAEC,MAAM,IACrBA,MAAM,CAACX,EAAE,KAAKQ,QAAQ,GAClB;MAAE,GAAGG,MAAM;MAAEN,KAAK,EAAE,CAAC,GAAGM,MAAM,CAACN,KAAK,EAAEI,IAAI;IAAE,CAAC,GAC7CE,MACN,CACF,CAAC;EACH,CAAC;EAED,MAAMC,YAAY,GAAGnB,OAAO,CAACW,MAAM,gBACjCnB,OAAA;IAAS4B,SAAS,EAAErC,OAAO,CAACiB,OAAQ;IAAAqB,QAAA,GACjCrB,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBAClB1B,OAAA,CAACJ,MAAM;MAEL8B,MAAM,EAAEA,MAAO;MACfI,OAAO,EAAGN,IAAI,IAAKF,eAAe,CAACI,MAAM,CAACX,EAAE,EAAES,IAAI;IAAE,GAF/CE,MAAM,CAACX,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGf,CACF,CAAC,eACFlC,OAAA;MAAK4B,SAAS,EAAErC,OAAO,CAAC4C,iBAAkB;MAAAN,QAAA,eACxC7B,OAAA;QAAMoC,OAAO,EAAEvB,YAAa;QAAAgB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC,gBAEVlC,OAAA;IAAA6B,QAAA,EAAG;EAAuC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAC9C;EAED,oBACElC,OAAA,CAACH,YAAY,CAACwC,QAAQ;IAACC,KAAK,EAAC,MAAM;IAAAT,QAAA,GAChCnB,WAAW,iBAAIV,OAAA,CAACN,UAAU;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BlC,OAAA;MAAS4B,SAAS,EAAErC,OAAO,CAACgD,MAAO;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE,cAAcrC,UAAU;MAAI,CAAE;MAAAyB,QAAA,gBAEpF7B,OAAA;QAAQ4B,SAAS,EAAErC,OAAO,CAACmD,OAAQ;QAAAb,QAAA,gBACjC7B,OAAA;UAAK4B,SAAS,EAAErC,OAAO,CAACoD,IAAK;UAAAd,QAAA,eAC3B7B,OAAA;YAAK4C,GAAG,EAAEpD,QAAS;YAACqD,GAAG,EAAC;UAAY;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACNlC,OAAA;UAAK4B,SAAS,EAAErC,OAAO,CAACuD,WAAY;UAAAjB,QAAA,gBAClC7B,OAAA;YAAA6B,QAAA,GAAA1B,qBAAA,GAAOE,MAAM,CAACC,gBAAgB,CAAC,cAAAH,qBAAA,uBAAxBA,qBAAA,CAA0B4C;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9ClC,OAAA;YAAK4B,SAAS,EAAErC,OAAO,CAACyD,iBAAkB;YAAAnB,QAAA,gBACxC7B,OAAA;cAAQ4B,SAAS,EAAErC,OAAO,CAAC0D,aAAc;cAACb,OAAO,EAAExB,SAAU;cAAAiB,QAAA,EAAC;YAE9D;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlC,OAAA,CAACP,oBAAoB;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAITlC,OAAA;QAAS4B,SAAS,EAAErC,OAAO,CAAC2D,eAAgB;QAAArB,QAAA,eAC1C7B,OAAA;UAAS4B,SAAS,EAAErC,OAAO,CAAC4D,mBAAoB;UAAAtB,QAAA,EAC7CF;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE5B,CAAC;AAAChC,EAAA,CA/EID,KAAK;AAAAmD,EAAA,GAALnD,KAAK;AAiFX,eAAeA,KAAK;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
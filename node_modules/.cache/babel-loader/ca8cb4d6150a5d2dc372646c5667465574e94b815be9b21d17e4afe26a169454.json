{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/EmptyBoard/EmptyBoard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport classes from \"./EmptyBoard.module.scss\";\nimport { TaskProvider } from \"../../store/newTaskContext\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmptyBoard = ({\n  createNewColumn\n}) => {\n  _s();\n  const [isResponsive, setIsResponsive] = useState(window.innerWidth <= 900);\n  const responsiveSpan = isResponsive ? /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"The board is empty. Create a new column  to get started\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"The board is empty. Create a new column to get started\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsResponsive(window.innerWidth <= 900);\n    };\n    window.addEventListener('resize', handleResize);\n    return window.addEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TaskProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.new_column,\n      children: [responsiveSpan, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.add_new_column,\n        onClick: createNewColumn,\n        children: \"+ add new column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(EmptyBoard, \"+4D6Q+gGsCfxlmtZTrmaLDqIJIA=\");\n_c = EmptyBoard;\nexport default EmptyBoard;\nvar _c;\n$RefreshReg$(_c, \"EmptyBoard\");","map":{"version":3,"names":["React","classes","TaskProvider","useState","useEffect","jsxDEV","_jsxDEV","EmptyBoard","createNewColumn","_s","isResponsive","setIsResponsive","window","innerWidth","responsiveSpan","children","fileName","_jsxFileName","lineNumber","columnNumber","handleResize","addEventListener","className","new_column","add_new_column","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/components/EmptyBoard/EmptyBoard.jsx"],"sourcesContent":["import React from \"react\";\nimport classes from \"./EmptyBoard.module.scss\";\nimport { TaskProvider } from \"../../store/newTaskContext\";\nimport { useState,useEffect } from \"react\";\nconst EmptyBoard = ({ createNewColumn }) => {\n  const [isResponsive, setIsResponsive] = useState(window.innerWidth <= 900 );\n  const responsiveSpan = isResponsive ? (\n    <span>\n      The board is empty. Create a new column  to get started\n    </span>\n  ) : (\n    <span>The board is empty. Create a new column to get started</span>\n  );\n  useEffect(()=>{\n    const handleResize=()=>{\n      setIsResponsive(window.innerWidth <= 900 )\n    }\n    window.addEventListener('resize',handleResize)\n    return window.addEventListener('resize',handleResize)\n  },[])\n  return (\n    <TaskProvider>\n      <section className={classes.new_column}>\n        {responsiveSpan}\n        <button className={classes.add_new_column} onClick={createNewColumn}>\n          + add new column\n        </button>\n      </section>\n    </TaskProvider>\n  );\n};\n\nexport default EmptyBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAACS,MAAM,CAACC,UAAU,IAAI,GAAI,CAAC;EAC3E,MAAMC,cAAc,GAAGJ,YAAY,gBACjCJ,OAAA;IAAAS,QAAA,EAAM;EAEN;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,gBAEPb,OAAA;IAAAS,QAAA,EAAM;EAAsD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CACnE;EACDf,SAAS,CAAC,MAAI;IACZ,MAAMgB,YAAY,GAACA,CAAA,KAAI;MACrBT,eAAe,CAACC,MAAM,CAACC,UAAU,IAAI,GAAI,CAAC;IAC5C,CAAC;IACDD,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAACD,YAAY,CAAC;IAC9C,OAAOR,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAACD,YAAY,CAAC;EACvD,CAAC,EAAC,EAAE,CAAC;EACL,oBACEd,OAAA,CAACJ,YAAY;IAAAa,QAAA,eACXT,OAAA;MAASgB,SAAS,EAAErB,OAAO,CAACsB,UAAW;MAAAR,QAAA,GACpCD,cAAc,eACfR,OAAA;QAAQgB,SAAS,EAAErB,OAAO,CAACuB,cAAe;QAACC,OAAO,EAAEjB,eAAgB;QAAAO,QAAA,EAAC;MAErE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEnB,CAAC;AAACV,EAAA,CA1BIF,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
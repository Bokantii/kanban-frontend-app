{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/store/newTaskContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [columns, setColumns] = useState([{\n    id: 1,\n    name: \"To Do\",\n    tasks: []\n  }, {\n    id: 2,\n    name: \"In Progress\",\n    tasks: []\n  }, {\n    id: 3,\n    name: \"Done\",\n    tasks: []\n  }]);\n  const addNewTask = (columnId, taskTitle) => {\n    setColumns(prevColumns => prevColumns.map(column => column.id === columnId ? {\n      ...column,\n      tasks: [...column.tasks, {\n        title: taskTitle,\n        id: Date.now()\n      }]\n    } : column));\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      columns,\n      addNewTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"iouVrZp/UD6J3TjXXAnAHuhfGuk=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","columns","setColumns","id","name","tasks","addNewTask","columnId","taskTitle","prevColumns","map","column","title","Date","now","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/store/newTaskContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const TaskContext = createContext();\n\nexport const TaskProvider = ({ children }) => {\n  const [columns, setColumns] = useState([\n    { id: 1, name: \"To Do\", tasks: [] },\n    { id: 2, name: \"In Progress\", tasks: [] },\n    { id: 3, name: \"Done\", tasks: [] },\n  ]);\n\n  const addNewTask = (columnId, taskTitle) => {\n    setColumns((prevColumns) =>\n      prevColumns.map((column) =>\n        column.id === columnId\n          ? { ...column, tasks: [...column.tasks, { title: taskTitle, id: Date.now() }] }\n          : column\n      )\n    );\n  };\n\n  return (\n    <TaskContext.Provider value={{ columns, addNewTask }}>\n      {children}\n    </TaskContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CACrC;IAAES,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACnC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAG,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAG,CAAC,CACnC,CAAC;EAEF,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IAC1CN,UAAU,CAAEO,WAAW,IACrBA,WAAW,CAACC,GAAG,CAAEC,MAAM,IACrBA,MAAM,CAACR,EAAE,KAAKI,QAAQ,GAClB;MAAE,GAAGI,MAAM;MAAEN,KAAK,EAAE,CAAC,GAAGM,MAAM,CAACN,KAAK,EAAE;QAAEO,KAAK,EAAEJ,SAAS;QAAEL,EAAE,EAAEU,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC;IAAE,CAAC,GAC7EH,MACN,CACF,CAAC;EACH,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,OAAO;MAAEK;IAAW,CAAE;IAAAP,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAtBWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
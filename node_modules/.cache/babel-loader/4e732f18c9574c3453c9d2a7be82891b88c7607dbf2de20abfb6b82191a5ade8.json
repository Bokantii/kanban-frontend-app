{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import Boards from \"./components/Board/Board\";\nimport BoardsAll from \"./components/BoardsAll/BoardsAll\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { useContext } from \"react\";\nimport { TranslateContext } from \"./store/boardTranslate-context\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [boardTranslate, setBoardTranslate] = useState(0);\n  const [board, setBoard] = useState({\n    id: 0,\n    title: \"Initial Board\",\n    columns: []\n  });\n  const [activeBoardIndex, setActiveBoardIndex] = useState(0);\n  const createNewBoard = title => {\n    const newBoard = {\n      id: 0,\n      title,\n      columns: []\n    };\n    set;\n  };\n\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: boardName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, this);\n  const addBoard = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"addBoard\",\n    onClick: handleClick,\n    children: \"Create New Board\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n  const boardTitle = enteredBoardName !== null && enteredBoardName !== void 0 ? enteredBoardName : \"\";\n  const modalCtx = useContext(ModalContext);\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n      value: modalCtx,\n      children: /*#__PURE__*/_jsxDEV(TranslateContext.Provider, {\n        value: {\n          boardTranslate,\n          setBoardTranslate\n        },\n        children: [/*#__PURE__*/_jsxDEV(BoardsAll, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"1QFU3ULU2OJfoJWLO4VN2opTmeg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BoardsAll","useState","useRef","Modal","ModalContext","SideBar","useContext","TranslateContext","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","enteredBoardName","setEnteredBoardName","enteredTaskName","setEnteredTaskName","boardTranslate","setBoardTranslate","board","setBoard","id","title","columns","activeBoardIndex","setActiveBoardIndex","createNewBoard","newBoard","set","boardName","boardInput","ref","fileName","_jsxFileName","lineNumber","columnNumber","addBoard","className","onClick","handleClick","children","boardTitle","modalCtx","current","value","Provider","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/frontend/src/App.js"],"sourcesContent":["// import Boards from \"./components/Board/Board\";\nimport BoardsAll from \"./components/BoardsAll/BoardsAll\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ModalContext } from \"./store/modal-context\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport { useContext } from \"react\";\nimport { TranslateContext } from \"./store/boardTranslate-context\";\nfunction App() {\n  const [enteredBoardName, setEnteredBoardName] = useState(\"\");\n  const [enteredTaskName, setEnteredTaskName] = useState(\"\");\n  const [boardTranslate, setBoardTranslate] = useState(0);\n  const [board,setBoard] = useState({id:0,title:\"Initial Board\",columns:[]});\n  const [activeBoardIndex,setActiveBoardIndex]=useState(0)\n\n  const createNewBoard=(title)=>{\n    const newBoard = {id:0,title,columns:[]};\n    set\n\n  }\n\n\n\n  // const [modalIsOpen, setModalIsOpen] = useState(false);\n  // const [newBoardCreated, setNewBoardCreated] = useState(false);\n  // const [newTaskCreated, setNewTaskCreated] = useState(false);\n  const boardName = useRef();\n  const boardInput = <input ref={boardName} />;\n  const addBoard = (\n    <button className=\"addBoard\" onClick={handleClick}>\n      Create New Board\n    </button>\n  );\n\n  const boardTitle = enteredBoardName ?? \"\";\n  const modalCtx = useContext(ModalContext);\n\n  function handleClick() {\n    setEnteredBoardName(boardName.current.value);\n  }\n\n  return (\n    <>\n      <ModalContext.Provider value={modalCtx}>\n        <TranslateContext.Provider value={{boardTranslate, setBoardTranslate}}>\n          <BoardsAll />\n          <SideBar />\n        </TranslateContext.Provider>\n      </ModalContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,SAAS,MAAM,kCAAkC;AACxD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAClE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACmB,KAAK,EAACC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC;IAACqB,EAAE,EAAC,CAAC;IAACC,KAAK,EAAC,eAAe;IAACC,OAAO,EAAC;EAAE,CAAC,CAAC;EAC1E,MAAM,CAACC,gBAAgB,EAACC,mBAAmB,CAAC,GAACzB,QAAQ,CAAC,CAAC,CAAC;EAExD,MAAM0B,cAAc,GAAEJ,KAAK,IAAG;IAC5B,MAAMK,QAAQ,GAAG;MAACN,EAAE,EAAC,CAAC;MAACC,KAAK;MAACC,OAAO,EAAC;IAAE,CAAC;IACxCK,GAAG;EAEL,CAAC;;EAID;EACA;EACA;EACA,MAAMC,SAAS,GAAG5B,MAAM,CAAC,CAAC;EAC1B,MAAM6B,UAAU,gBAAGtB,OAAA;IAAOuB,GAAG,EAAEF;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC5C,MAAMC,QAAQ,gBACZ5B,OAAA;IAAQ6B,SAAS,EAAC,UAAU;IAACC,OAAO,EAAEC,WAAY;IAAAC,QAAA,EAAC;EAEnD;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EAED,MAAMM,UAAU,GAAG5B,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,EAAE;EACzC,MAAM6B,QAAQ,GAAGrC,UAAU,CAACF,YAAY,CAAC;EAEzC,SAASoC,WAAWA,CAAA,EAAG;IACrBzB,mBAAmB,CAACe,SAAS,CAACc,OAAO,CAACC,KAAK,CAAC;EAC9C;EAEA,oBACEpC,OAAA,CAAAE,SAAA;IAAA8B,QAAA,eACEhC,OAAA,CAACL,YAAY,CAAC0C,QAAQ;MAACD,KAAK,EAAEF,QAAS;MAAAF,QAAA,eACrChC,OAAA,CAACF,gBAAgB,CAACuC,QAAQ;QAACD,KAAK,EAAE;UAAC3B,cAAc;UAAEC;QAAiB,CAAE;QAAAsB,QAAA,gBACpEhC,OAAA,CAACT,SAAS;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACb3B,OAAA,CAACJ,OAAO;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACxB,CAAC;AAEP;AAACvB,EAAA,CA3CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/store/newTaskContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [numOfTasks, setNumOfTasks] = useState(0);\n  const [newTask, setNewTask] = useState([]);\n  const [modalIsHidden, setModalisHidden] = useState(false);\n  function addNewTask(column) {\n    column.map(() => /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 22\n    }, this));\n    setModalisHidden(true);\n  }\n  const [cards, setCards] = useState([]);\n  function addNewCard(prevCards) {\n    setCards(() => [...prevCards, /*#__PURE__*/_jsxDEV(Card, {}, prevCards.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 35\n    }, this)]);\n  }\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      numOfTasks,\n      addNewTask,\n      modalIsHidden\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"iBmBw0yq/DXJ3yCqZyLzh2p4UKQ=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useState","Card","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","numOfTasks","setNumOfTasks","newTask","setNewTask","modalIsHidden","setModalisHidden","addNewTask","column","map","fileName","_jsxFileName","lineNumber","columnNumber","cards","setCards","addNewCard","prevCards","length","Provider","value","_c","$RefreshReg$"],"sources":["/Users/user/Documents/SOFTWARE DEVELOPMENT/WEB/FRONT END MENTOR/GURU/Kanban Web Management App/kanban-web/kanban_frontend/src/store/newTaskContext.jsx"],"sourcesContent":["import { createContext } from \"react\";\nimport { useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nexport const TaskContext = createContext();\nexport  const TaskProvider = ({ children }) => {\n  const [numOfTasks, setNumOfTasks] = useState(0);\n  const [newTask, setNewTask] = useState([]);\n  const [modalIsHidden, setModalisHidden] = useState(false);\n  function addNewTask(column) {\n    column.map(() => <Card />);\n    setModalisHidden(true);\n  }\n\n  const [cards,setCards] = useState([])\n  function addNewCard(prevCards){\n       setCards(()=>[...prevCards,<Card key={prevCards.length}/>])\n  }\n  return (\n    <TaskContext.Provider value={{ numOfTasks, addNewTask, modalIsHidden }}>\n      {children}\n    </TaskContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAC1C,OAAQ,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzD,SAASc,UAAUA,CAACC,MAAM,EAAE;IAC1BA,MAAM,CAACC,GAAG,CAAC,mBAAMb,OAAA,CAACF,IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAC1BP,gBAAgB,CAAC,IAAI,CAAC;EACxB;EAEA,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACrC,SAASuB,UAAUA,CAACC,SAAS,EAAC;IACzBF,QAAQ,CAAC,MAAI,CAAC,GAAGE,SAAS,eAACrB,OAAA,CAACF,IAAI,MAAMuB,SAAS,CAACC,MAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EAChE;EACA,oBACEjB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,UAAU;MAAEM,UAAU;MAAEF;IAAc,CAAE;IAAAN,QAAA,EACpEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,EAAA,CAlBYF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}